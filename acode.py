codes = ['1B351r','1B351i', 'HE171h', 'CD211z', 'NM252h', '7K831i', 'EE831r', 'FJ912i', '5M391i', 'DF692r', 'AF652i', 'DJ635z', 'IL431r', 'MC635i', 'HH731h', '3I652i', '6F735a', '9I215a', '9A291z', '7K695z', 'JH835r', 'AB771i', 'MI592r', 'JM151i', 'LN411h', '5D655i', '7H492a', '5K892h', 'NA192r', 'HB932a', 'HD372h', '9G415z', 'EN112a', '6M975h', 'IG671a', '9N815a', '7D272z', '5D371a', '7G552z', '5H632h', '9G612h', '3L211h', 'JA472r', 'EC392a', 'LA135a', '9N555r', '7M251a', '4B751a', '4I895z', '2B255a', '7F891r', '3A452h', 'HI831h', '8M875h', '6F371r', 'FG452i', '5K872r', 'AK152h', 'MJ172z', '8N975i', 'KM731r', '7G932a', '2B632a', 'NG631h', '8K495z', '9N235a', 'JD451r', '2F875r', '5D392h', '7E931a', 'JM192z', '6J531r', 'FC572z', 'AE695h', '4C715i', 'JG992i', '3I492z', 'KC455z', 'CK495z', 'JK992h', 'BN252z', 'NB551a', 'NM331a', '9C132i', '6K135a', 'AB535r', 'GI571r', '6G375z', 'FB152i', '9H911a', 'EL172z', 'GK472a', '5G855z', 'AF452r', '9A891r', '1E231z', 'CA972i', '2B775i', '9L892i', '1L895a', '5N615z', 'KI715i', 'AL795h', 'HD771i', '8G732r', '3N371i', '7M192r', 'AG312z', '8D875i', '5N171r', 'AJ992z', 'MJ492h', '4L955i', 'NN732h', 'LC252r', '7D872h', '4K931a', '8J992r', '9E455i', 'HB471h', 'AE195z', '5J532i', 'MJ272z', 'KG911i', 'FK291r', '6N431h', 'NN672z', '1L672z', '1L255h', '1D435a', 'FI915a', '9G132a', 'CJ192a', 'BE155r', 'EL695i', '7L531i', '6H475h', '5K211a', 'KL991h', 'NN935h', '8C215z', '7G151h', 'AE135a', 'CJ431i', '4M171r', '2B731a', '7D355r', '9G111h', 'LN151r', 'KA471a', 'FJ135r', '3B852a', '5C371z', '3E751i', 'ML372z', 'BL335z', '5E552r', 'LD792i', '1J511a', 'ME975i', '9L191r', '6K372z', 'EC155r', '5H952z', '5K975r', 'HN251r', '4D612i', 'ED592r', '4K891r', '2L471r', 'NH791i', '7M652i', 'CF872i', 'MD592i', '7K935h', '1B771z', 'DF992h', 'HI952r', '7J112z', 'GC951z', '3C972z', '5F231h', '1C231i', '1L831r', '6H851h', 'JF931a', 'EC812z', '5G931r', 'GC252a', 'FL175h', 'ME571h', '8D932a', '1G971a', '4J235a', 'HG332a', '5A552i', 'EC551i', 'EE935r', 'AC632a', 'CL671r', 'IG975r', '9N775z', '9N532a', 'LJ752h', '8B655z', 'FA475z', '1N152r', '8G751z', '9D155r', 'NN275h', '4G471h', 'JD775a', '6J595r', '2C615z', 'AB131r', 'IG431r', 'NH552r', '3A335a', 'GG111a', '4D631z', '8J875r', 'JA592i', 'GH512z', '3J491i', 'GA195a', '7I891z', 'MN775i', '7L452h', '2M932i', '6N692i', 'BH195h', '5I591h', '5H175h', 'FJ395h', '8B372h', 'FJ935z', '3B755r', '9E355z', '7L895r', '5H531h', 'BA175z', '6A951i', '4G511a', 'IH391z', 'AG271z', '1F775z', '4M735r', '9F612h', 'GJ551a', 'LF631i', '9G991a', '4E855z', 'BH271r', '3B292z', 'JN895a', 'FB275r', 'JE191i', 'AB695r', 'HF475a', '7C732i', '7D592r', '3K192i', '5M592h', 'EC475i', 'DI131a', 'EG655h', 'NB172r', '3B931h', '5C252z', 'IK952i', 'FE555z', 'LH952a', '8J132r', 'IA592a', 'HG915z', 'JG535z', '8K155r', '4G751h', 'CB791h', '9H455z', 'IJ475i', '9G891z', 'DK871z', 'DM371z', 'LC131z', '3F795h', '6I852i', 'NE775i', 'HL891r', 'AI451a', '8E335z', '8L471z', 'IB535z', '5C671r', 'IG715z', '3G732h', '6K655i']

def print_acode():
	for i in range(0, len(codes), 8):
		if i<len(codes)-11:
			print codes[i], "\t", codes[i+1], "\t", codes[i+2], "\t", codes[i+3], "\t",
			print codes[i+4], "\t", codes[i+5], "\t", codes[i+6], "\t", codes[i+7],
			print "\n"
		else:
			for j in range(len(codes)-i):
				print codes[i+j-1], "\t",
			print ""
			break


def check_acode(access_code):
	# codes = ['1B351r','1B351i', 'HE171h', 'CD211z', 'NM252h', '7K831i', 'EE831r', 'FJ912i', '5M391i', 'DF692r', 'AF652i', 'DJ635z', 'IL431r', 'MC635i', 'HH731h', '3I652i', '6F735a', '9I215a', '9A291z', '7K695z', 'JH835r', 'AB771i', 'MI592r', 'JM151i', 'LN411h', '5D655i', '7H492a', '5K892h', 'NA192r', 'HB932a', 'HD372h', '9G415z', 'EN112a', '6M975h', 'IG671a', '9N815a', '7D272z', '5D371a', '7G552z', '5H632h', '9G612h', '3L211h', 'JA472r', 'EC392a', 'LA135a', '9N555r', '7M251a', '4B751a', '4I895z', '2B255a', '7F891r', '3A452h', 'HI831h', '8M875h', '6F371r', 'FG452i', '5K872r', 'AK152h', 'MJ172z', '8N975i', 'KM731r', '7G932a', '2B632a', 'NG631h', '8K495z', '9N235a', 'JD451r', '2F875r', '5D392h', '7E931a', 'JM192z', '6J531r', 'FC572z', 'AE695h', '4C715i', 'JG992i', '3I492z', 'KC455z', 'CK495z', 'JK992h', 'BN252z', 'NB551a', 'NM331a', '9C132i', '6K135a', 'AB535r', 'GI571r', '6G375z', 'FB152i', '9H911a', 'EL172z', 'GK472a', '5G855z', 'AF452r', '9A891r', '1E231z', 'CA972i', '2B775i', '9L892i', '1L895a', '5N615z', 'KI715i', 'AL795h', 'HD771i', '8G732r', '3N371i', '7M192r', 'AG312z', '8D875i', '5N171r', 'AJ992z', 'MJ492h', '4L955i', 'NN732h', 'LC252r', '7D872h', '4K931a', '8J992r', '9E455i', 'HB471h', 'AE195z', '5J532i', 'MJ272z', 'KG911i', 'FK291r', '6N431h', 'NN672z', '1L672z', '1L255h', '1D435a', 'FI915a', '9G132a', 'CJ192a', 'BE155r', 'EL695i', '7L531i', '6H475h', '5K211a', 'KL991h', 'NN935h', '8C215z', '7G151h', 'AE135a', 'CJ431i', '4M171r', '2B731a', '7D355r', '9G111h', 'LN151r', 'KA471a', 'FJ135r', '3B852a', '5C371z', '3E751i', 'ML372z', 'BL335z', '5E552r', 'LD792i', '1J511a', 'ME975i', '9L191r', '6K372z', 'EC155r', '5H952z', '5K975r', 'HN251r', '4D612i', 'ED592r', '4K891r', '2L471r', 'NH791i', '7M652i', 'CF872i', 'MD592i', '7K935h', '1B771z', 'DF992h', 'HI952r', '7J112z', 'GC951z', '3C972z', '5F231h', '1C231i', '1L831r', '6H851h', 'JF931a', 'EC812z', '5G931r', 'GC252a', 'FL175h', 'ME571h', '8D932a', '1G971a', '4J235a', 'HG332a', '5A552i', 'EC551i', 'EE935r', 'AC632a', 'CL671r', 'IG975r', '9N775z', '9N532a', 'LJ752h', '8B655z', 'FA475z', '1N152r', '8G751z', '9D155r', 'NN275h', '4G471h', 'JD775a', '6J595r', '2C615z', 'AB131r', 'IG431r', 'NH552r', '3A335a', 'GG111a', '4D631z', '8J875r', 'JA592i', 'GH512z', '3J491i', 'GA195a', '7I891z', 'MN775i', '7L452h', '2M932i', '6N692i', 'BH195h', '5I591h', '5H175h', 'FJ395h', '8B372h', 'FJ935z', '3B755r', '9E355z', '7L895r', '5H531h', 'BA175z', '6A951i', '4G511a', 'IH391z', 'AG271z', '1F775z', '4M735r', '9F612h', 'GJ551a', 'LF631i', '9G991a', '4E855z', 'BH271r', '3B292z', 'JN895a', 'FB275r', 'JE191i', 'AB695r', 'HF475a', '7C732i', '7D592r', '3K192i', '5M592h', 'EC475i', 'DI131a', 'EG655h', 'NB172r', '3B931h', '5C252z', 'IK952i', 'FE555z', 'LH952a', '8J132r', 'IA592a', 'HG915z', 'JG535z', '8K155r', '4G751h', 'CB791h', '9H455z', 'IJ475i', '9G891z', 'DK871z', 'DM371z', 'LC131z', '3F795h', '6I852i', 'NE775i', 'HL891r', 'AI451a', '8E335z', '8L471z', 'IB535z', '5C671r', 'IG715z', '3G732h', '6K655i']
	if access_code in codes:
		return True
	else:
		return False

def read_acode_from_file():
	c = []
	lines = open('new.txt').read().splitlines()
	print lines																							


if __name__=="__main__":
	# print len(codes)
	print_acode()